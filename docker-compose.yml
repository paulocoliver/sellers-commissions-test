version: '3'
services:

  #PHP Service
  php:
    build:
      context: ./api
      dockerfile: ./_docker/Dockerfile
    image: paulocoliver/api-php
    container_name: seller-commissions-test-php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      APP_ENV: local
    working_dir: /var/www
    volumes:
    - ./api:/var/www
    - ./api/_docker/php-local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
    - api-network

  #Nginx Service
  nginx:
    image: nginx:alpine
    container_name: seller-commissions-test-nginx
    restart: unless-stopped
    tty: true
    ports:
    - "3333:80"
    volumes:
    - ./api:/var/www
    - ./api/_docker/nginx-custom.conf:/etc/nginx/conf.d/default.conf
    networks:
    - api-network

  #MySQL Service
  mysql:
    image: mysql:5.7.22
    container_name: seller-commissions-test-mysql
    restart: unless-stopped
    tty: true
    ports:
    - "3306:3306"
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
    - dbdata:/var/lib/mysql
    networks:
    - api-network

  #Mongo
#  api-mongo:
#    image: mongo
#    container_name: seller-commissions-test-mongo
#    restart: always
#    ports:
#    - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME:
#      MONGO_INITDB_ROOT_PASSWORD:
#    networks:
#    - api-network

  angular:
    build:
      context: ./angular
      dockerfile: ./_docker/Dockerfile
    container_name: seller-commissions-test-angular
    restart: unless-stopped
    ports:
    - "3000:80"

#Docker Networks
networks:
  api-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local